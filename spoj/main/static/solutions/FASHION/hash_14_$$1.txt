#include <stdio.h>

int partition(int arr[], int start, int end){
	int i, temp, pivot = arr[end];
	int pIndex = start;
	for(i=start;i<end;i++){
		if(arr[i]<=pivot){
			temp = arr[i];
			arr[i] = arr[pIndex];
			arr[pIndex] = temp;
			pIndex++;
		}
	}
	temp = arr[pIndex];
	arr[pIndex] = arr[end];
	arr[end] = temp;
	return pIndex;
}

void quicksort(int arr[], int start, int end){
	int pIndex;
	if(start < end){
		pIndex = partition(arr, start, end);
		quicksort(arr, start, pIndex-1);
		quicksort(arr, pIndex+1, end);
	}
}


int main(){
	int t, n, i, mmds;
	int hmen[1001], hwomen[1001];
	scanf("%d", &t);
	while(t--){
		scanf("%d", &n);
		for(i=0;i<n;i++){
			scanf("%d", &hmen[i]);
		}
		for(i=0;i<n;i++){
			scanf("%d", &hwomen[i]);
		}
		quicksort(hmen, 0, n-1);
		quicksort(hwomen, 0, n-1);
		mmds = 0;
		for(i=0;i<n;i++){
			mmds += (hmen[i]*hwomen[i]);
		}
		printf("%d\
", mmds);
	}
}